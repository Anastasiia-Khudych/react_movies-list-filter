{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/SuggestedMovies/SuggestedMovies.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","imdbUrl","imgUrl","description","title","className","src","alt","href","MoviesList","movies","query","visibleMovies","searchStr","toLowerCase","trim","filter","includes","getVisibleMovies","map","imdbId","SuggestedMovies","useState","setQuery","htmlFor","type","name","id","placeholder","value","onChange","event","target","moviesFromServer","App","ReactDOM","render","document","getElementById"],"mappings":"2tEAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEzCC,EACED,EADFC,QAASC,EACPF,EADOE,OAAQC,EACfH,EADeG,YAAaC,EAC5BJ,EAD4BI,MAGhC,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKJ,EACLK,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,SAI/B,sBAAKC,UAAU,UAAf,UACGF,EACD,uBACA,mBAAGK,KAAMP,EAAT,4BC/BGQ,EAA8B,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAa9CC,EAZmB,WACvB,IAAMC,EAAYF,EAAMG,cAAcC,OAQtC,OAPsBL,EAAOM,QAAO,SAAAhB,GAClC,IAAQI,EAAuBJ,EAAvBI,MAAOD,EAAgBH,EAAhBG,YAEf,OAAOC,EAAMU,cAAcG,SAASJ,IAC/BV,EAAYW,cAAcG,SAASJ,MAMtBK,GAEtB,OACE,qBAAKb,UAAU,SAAf,SACGO,EAAcO,KAAI,SAAAnB,GAAK,OACtB,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMoB,c,OCvBjBC,EAA4B,WACvC,MAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KAQA,OACE,sBAAKlB,UAAU,eAAf,UACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UAEE,uBAAOmB,QAAQ,eAAenB,UAAU,QAAxC,0BAIA,qBAAKA,UAAU,UAAf,SACE,uBACEoB,KAAK,OACLC,KAAK,QACLC,GAAG,eACHtB,UAAU,QACVuB,YAAY,mBACZC,MAAOlB,EACPmB,SAvBc,SAACC,GACzB,IAAQF,EAAUE,EAAMC,OAAhBH,MAERN,EAASM,aA0BP,cAAC,EAAD,CACEnB,OAAQuB,EACRtB,MAAOA,QClCFuB,EAAgB,WAC3B,OACE,sBAAK7B,UAAU,OAAf,UACE,cAAC,EAAD,IAEA,qBAAKA,UAAU,UAAf,mCCLN8B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7764de1e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ninterface Props {\n  movie: Movie;\n}\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imdbUrl, imgUrl, description, title,\n  } = movie;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n  query: string;\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies, query }) => {\n  const getVisibleMovies = () => {\n    const searchStr = query.toLowerCase().trim();\n    const visibleMovies = movies.filter(movie => {\n      const { title, description } = movie;\n\n      return title.toLowerCase().includes(searchStr)\n        || description.toLowerCase().includes(searchStr);\n    });\n\n    return visibleMovies;\n  };\n\n  const visibleMovies = getVisibleMovies();\n\n  return (\n    <div className=\"movies\">\n      {visibleMovies.map(movie => (\n        <MovieCard key={movie.imdbId} movie={movie} />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { MoviesList } from '../MoviesList';\nimport moviesFromServer from '../../api/movies.json';\n\nexport const SuggestedMovies: React.FC = () => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n  };\n\n  return (\n    <div className=\"page-content\">\n      <div className=\"box\">\n        <div className=\"field\">\n          {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n          <label htmlFor=\"search-query\" className=\"label\">\n            Search movie\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              name=\"query\"\n              id=\"search-query\"\n              className=\"input\"\n              placeholder=\"Type search word\"\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n        </div>\n      </div>\n\n      <MoviesList\n        movies={moviesFromServer}\n        query={query}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { SuggestedMovies } from './components/SuggestedMovies';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"page\">\n      <SuggestedMovies />\n\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}